@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Http.Extensions
@inject NavigationManager navigationManager

    <div>
        @foreach (var i in @NavLinkItems)
        {
            <div class="mainPageLinkContainer" @key="@i">
                <a href="#" class="mainPageLink" @onclick="@(() => NavClicked(i))">
                    <span class=@i.SpanClassNames>@i.LinkName</span>
                </a>
            </div>
        }
    </div>

@functions {

    [Parameter]
    public bool Visible { get; set; }

    [Parameter]
    public EventCallback<bool> VisibleChanged { get; set; }

    [Parameter]
    public string SelectedTitle { get; set; } = "Home";

    [Parameter]
    public EventCallback<string> SelectedTitleChanged { get; set; }

    [Parameter]
    public EventCallback<bool> OnNavSelected { get; set; }

    [Parameter]
    public List<NavLinkItem> NavLinkItems { get; set; }

    protected override void OnInitialized()
    {
        NavLinkItems = new List<NavLinkItem>
        {
            new NavLinkItem { Title="Home", RelativeUrl = "/", LinkName = "Home", IsSelected = true },
            new NavLinkItem { Title="Counter", RelativeUrl = "/counter", LinkName = "Counter", IsSelected = false },
            new NavLinkItem { Title="Weather forecast", RelativeUrl = "/fetchdata", LinkName = "Weather", IsSelected = false }
        };
    }

    void NavSelected()
    {
        VisibleChanged.InvokeAsync(!Visible);
        this.StateHasChanged();
    }

    void NavClicked(NavLinkItem navLinkItem)
    {
        NavLinkItems.ForEach(_ => _.IsSelected = false);
        navLinkItem.IsSelected = true;
        navigationManager.NavigateTo(navLinkItem.RelativeUrl);
        SelectedTitleChanged.InvokeAsync(navLinkItem.Title);
        OnNavSelected.InvokeAsync(true);
        this.StateHasChanged();
    }

    public class NavLinkItem
    {
        public string LinkName { get; set; }
        public string Title { get; set; }
        public string RelativeUrl { get; set; }

        private bool _isSelected;
        public bool IsSelected
        {
            get => _isSelected;
            set
            {
                _isSelected = value;
                SpanClassNames = _isSelected ? "oi oi-plus mainPageLinkSpan mainPageLinkSpanSelected" : "oi oi-plus mainPageLinkSpan";
            }
        }

        public string SpanClassNames { get; set; }
    }

}
